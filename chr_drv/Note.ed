编写字符设备驱动的步骤和规范

步骤:
	1. 实现模块加载和卸载入口函数
		module_init(chr_dev_init);
		module_exit(chr_dev_exit);
	
 2. 在模块加载入口函数中
    a. 申请主设备号--内核中用于区和管理不同字符设备
    	register_chrdev(dev_major, "chr_dev_test", &my_fops);

    b.创建一个设备节点文件--为用户提供一个可操作的文件接口--open()
    	static struct class *devcls = class_create(THIS_MODULE, "chr_cls");
    	static struct device *dev = device_create(devcls, NULL, MKDEV(dev_major, 0), NULL, "chr2");

    c.硬件的初始化
    	1.地址的映射
    		gpx2conf = ioremap(GPX2_CON, GPX2_SIZE);
    	2.中断的申请
    	3.实现硬件的寄存器的初始化
    		*gpx2conf &= ~(0xf << 28);
    		*gpx2conf |= (0x1 << 28);

    d.实现file_operations
    	const struct file_operations my_fops = {
    	    .open = chr_dev_open,
    	    .read = chr_dev_read,
    	    .write = chr_dev_write,
    	    .release = chr_dev_close,
    	};

	


